{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentDate","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","clockName","props","debug","clearInterval","className","React","PureComponent","getRandomName","value","now","toString","App","hasClock","undefined","date","document","addEventListener","event","preventDefault","removeEventListener","Component","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,YAAa,IAAIC,MAFrB,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,YAAa,IAAIC,OAEjCM,QAAQC,KAAK,EAAKT,MAAMC,YAAYS,cAAcC,OAAO,IAAK,MAC7D,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,YAAcT,KAAKU,MAAMD,WAErCL,QAAQO,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDT,KAAKU,MAAMD,cAlBzE,kCAsBE,WACER,OAAOW,cAAcZ,KAAKD,WAvB9B,oBA0BE,WACE,IAAQU,EAAcT,KAAKU,MAAnBD,UACAZ,EAAgBG,KAAKJ,MAArBC,YAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAYS,cAAcC,OAAO,IAAK,YAvCjD,GAA2BO,IAAMC,eCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAGX,IAAMG,EAAb,4MACExB,MAAQ,CACNa,UAAW,UACXY,UAAU,GAHd,EAMEtB,aAA8BuB,EANhC,EAQEC,UAA2BD,EAR7B,uDAUE,WAA2B,IAAD,OACxBtB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEM,UAAWO,QAC1B,MAEHQ,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKxB,SAAS,CAAEkB,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,WACjC,EAAKtB,SAAS,CAAEkB,UAAU,SArBhC,kCAyBE,WAA8B,IAAD,OAC3BpB,OAAOW,cAAcZ,KAAKD,SAE1ByB,SAASI,oBAAoB,eAAe,SAACF,GAC3CA,EAAMC,iBACN,EAAKxB,SAAS,CAAEkB,UAAU,OAG5BG,SAASI,oBAAoB,SAAS,WACpC,EAAKzB,SAAS,CAAEkB,UAAU,SAlChC,oBAsCE,WACE,IAAQA,EAAarB,KAAKJ,MAAlByB,SAER,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GACM,cAAC,EAAD,CAAOZ,UAAWT,KAAKJ,MAAMa,mBA9C5C,GAAyBK,IAAMe,WCP/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.6cd84aa2.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  currentDate: Date,\n};\n\nexport class Clock extends React.PureComponent<Props, State> {\n  state = {\n    currentDate: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ currentDate: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.currentDate.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { currentDate } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentDate.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId: number | undefined = undefined;\n\n  date: number | undefined = undefined;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault(); // not to show the context menu\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.removeEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock\n            && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}